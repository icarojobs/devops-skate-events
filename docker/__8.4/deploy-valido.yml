version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]
    command:
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.myresolver.acme.email=icaro.wsilva@al.infnet.edu.br
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --log.level=DEBUG
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certs:/letsencrypt
    networks:
      - app_network

  laravel_app:
    image: mob2you/devops-skate-events:latest
    deploy:
      replicas: 3
      labels:
        - traefik.enable=true
        - traefik.http.routers.laravel_app.rule=Host(`sandbox.gestordevalores.com.br`)
        - traefik.http.services.laravel_app.loadbalancer.server.port=80
        - traefik.http.routers.laravel_app.entrypoints=websecure
        - traefik.http.routers.laravel_app.tls.certresolver=myresolver
    environment:
      APP_ENV: local
      APP_PORT: 8000
      APP_URL: https://0.0.0.0:8000
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: devops_skate_events
      DB_USERNAME: sail
      DB_PASSWORD: password
    networks:
      - app_network

  mysql:
    image: mysql/mysql-server:8.0
    deploy:
      placement:
        constraints:
          - node.hostname == swarm-node-1
      restart_policy:
        condition: on-failure
    command: --bind-address=0.0.0.0
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app_network
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: devops_skate_events
      MYSQL_USER: sail
      MYSQL_PASSWORD: password
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "mysql", "-u", "sail", "-ppassword" ]
      interval: 5s
      timeout: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    deploy:
      mode: global
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    volumes:
      - prometheus_data:/prometheus
    networks:
      - app_network
    ports:
      - target: 9090
        published: 9090
        protocol: tcp

  grafana:
    image: grafana/grafana:latest
    deploy:
      replicas: 1
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app_network
    ports:
      - target: 3000
        published: 3000
        protocol: tcp

networks:
  app_network:
    driver: overlay

volumes:
  mysql_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  traefik_certs:
    driver: local

configs:
  prometheus_config:
    file: ./docker/prometheus/prometheus.yml
